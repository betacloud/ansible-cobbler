---
- name: Check if distribution {{ distro.name }} exists
  cobbler:
    username: "{{ cobbler_username }}"
    password: "{{ cobbler_password }}"
    server_url: "{{ cobbler_server_url }}"
    entity: distro
    action: has
    params:
      name: "{{ distro.name }}-{{ distro.arch }}"

- name: Set {{ distro.name }} exists fact
  set_fact:
    distro_exists: "{{ cobbler_result }}"

- name: Download iso image for distribution {{ distro.name }}
  get_url:
    url: "{{ distro.url }}"
    dest: "{{ cobbler_image_directory }}/{{ distro.name }}.iso"
  when: not distro_exists
  async: "{{ cobbler_fetch_image_timeout }}"
  poll: 2

- name: Mount iso image for distribution {{ distro.name }}
  mount:
    name: "{{ cobbler_image_directory }}/{{ distro.name }}"
    src: "{{ cobbler_image_directory }}/{{ distro.name }}.iso"
    state: mounted
    fstype: iso9660
    opts: "loop,ro"
  become: true
  when: not distro_exists

# NOTE: Mounted files only visible after a restart of the container

- include: task-restart.yml
  when: not distro_exists

- include: wait-for-service.yml
  when: not distro_exists

- name: Import files from iso image for distribution {{ distro.name }}
  command: "docker exec -t {{ cobbler_docker_container_name }} cobbler import --name {{ distro.name }} --path /mnt/{{ distro.name }} --arch {{ distro.arch }}"
  when: not distro_exists

#- name: Import files from mounted iso file
#  cobbler:
#    server_url: "http://{{ cobbler_host }}:{{ cobbler_port }}/cobbler_api"
#    username: "{{ cobbler_username }}"
#    password: "{{ cobbler_password }}"
#    action: import
#    params:
#      name: "{{ distro.name }}"
#      arch: "{{ distro.arch }}"
#      path: "/mnt/{{ distro.name }}"
#  when: not distro_exists

- name: Unmount iso image for distribution {{ distro.name }}
  mount:
    name: "{{ cobbler_image_directory }}/{{ distro.name }}"
    state: unmounted
  become: true
  when: not distro_exists
